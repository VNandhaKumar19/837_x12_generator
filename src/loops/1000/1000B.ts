import { Receiver } from "../../models/request.model";

/**
 * The function generates a formatted string with specific data values for a receiver in a trading
 * partner service.
 * @param {Receiver} receiver - The `receiver` parameter is an object containing information about the
 * receiver of the data. It likely includes details such as the organization name, identification
 * codes, and other relevant information needed for generating a data string in a specific format.
 * @param {string} tradingPartnerServiceId - The `tradingPartnerServiceId` parameter is a string that
 * represents the identifier of the trading partner service. It is used as a parameter in the
 * `generate1000B` function along with the `receiver` parameter to generate a formatted string based on
 * the data provided in the function.
 * @returns The function `generate1000B` returns a formatted string based on the data object provided.
 * The string is generated by trimming each value in the data object, joining them with an asterisk (*)
 * separator, and appending a tilde (~) at the end.
 */
export function generate1000B(receiver: Receiver, tradingPartnerServiceId: string): string {
    const data = {
        "Segment": "NM1",
        "EntityIdentifierCode": "40",
        "EntityTypeQualifier": "2",
        "LastName": receiver?.organizationName,
        "Unknown1": '',
        "Unknown2": '',
        "Unknown3": '',
        "Unknown4": '',
        "IdentificationCodeQualifier": "PI",
        "IdentificationCode": receiver.payerId
    }

    const formattedString = Object.values(data)
        .map(value => value.trim())
        .join('*') + '~';

    return formattedString;
}